#!/bin/bash


folders=(
    documents
    downloads
    pictures
    repositories
    stuff
    training
)  # data, music & videos folders are too big


save() {
    archive="save$(date '+_%Y_%m_%d').zip"

    # actually compressing data
    for folder in "${folders[@]}"
    do
        tar --dereference --gzip --verbose \
            -cf "${folder}.tar.gz" \
            "$folder"
    done

    # gathering these tarballs into a single zip file
    zip "$archive" ./*.tar.gz

    # moving to data dump folder
    if [ -e data ]
    then
        mv "$archive" data/
    else
        mkdir data
        mv "$archive" data/
    fi

    # Remove temporary archives
    rm ./*.tar.gz
}


load() {
    # TODO
    exit 1
    rsync \
        --archive \
        --chmod=Du=rwx,Dgo=rx,Fu=rw,Fgo=r \
        --compress \
        --delete-after \
        --partial \
        --progress \
        --verbose \
        "$2" \
        "$3"
}


flat() {
    # TODO make sure this archive is encrypted
    exit 1
    scp -B "$archive" "${USER}@${FLAT}:/home/${USER}/data"
}


fix() {
    # TODO
    exit 1
    # (try to) fix permission problems
    # $2: source folder

    test -n "$2" || exit

    # enforce UNIX default permissions (644 for files and 775 for folders)
    # (might need sudo rights)
    cd "$2"
    find . -type d -print0 | xargs -0 chmod -R 775
    find . -type f -print0 | xargs -0 chmod 664
}


help() {
    # display available functions
    printf "Available options:
    * save: archives folders
    * load: unzips archive
    * flat: move the latest (daily) folder to the flatshare
    * fix:  try to fix permissions issues
    * help: Display this help"
}


cd "$HOME" || exit

if [ -z "$1" ]
then
    help
else
    time "$1"; echo $?
fi
